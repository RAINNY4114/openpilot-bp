#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_5237643649060389022) {
   out_5237643649060389022[0] = 0;
   out_5237643649060389022[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_5237643649060389022[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_5237643649060389022[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_5237643649060389022[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_5237643649060389022[5] = -sin(in_vec[1]);
   out_5237643649060389022[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5237643649060389022[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5237643649060389022[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_5237643649060389022[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_5237643649060389022[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_5237643649060389022[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_5237643649060389022[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_5237643649060389022[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_5237643649060389022[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_5237643649060389022[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_5237643649060389022[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_5237643649060389022[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_967976388207055188) {
   out_967976388207055188[0] = delta_x[0] + nom_x[0];
   out_967976388207055188[1] = delta_x[1] + nom_x[1];
   out_967976388207055188[2] = delta_x[2] + nom_x[2];
   out_967976388207055188[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_967976388207055188[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_967976388207055188[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_967976388207055188[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_967976388207055188[7] = delta_x[6] + nom_x[7];
   out_967976388207055188[8] = delta_x[7] + nom_x[8];
   out_967976388207055188[9] = delta_x[8] + nom_x[9];
   out_967976388207055188[10] = delta_x[9] + nom_x[10];
   out_967976388207055188[11] = delta_x[10] + nom_x[11];
   out_967976388207055188[12] = delta_x[11] + nom_x[12];
   out_967976388207055188[13] = delta_x[12] + nom_x[13];
   out_967976388207055188[14] = delta_x[13] + nom_x[14];
   out_967976388207055188[15] = delta_x[14] + nom_x[15];
   out_967976388207055188[16] = delta_x[15] + nom_x[16];
   out_967976388207055188[17] = delta_x[16] + nom_x[17];
   out_967976388207055188[18] = delta_x[17] + nom_x[18];
   out_967976388207055188[19] = delta_x[18] + nom_x[19];
   out_967976388207055188[20] = delta_x[19] + nom_x[20];
   out_967976388207055188[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_175890247565689822) {
   out_175890247565689822[0] = -nom_x[0] + true_x[0];
   out_175890247565689822[1] = -nom_x[1] + true_x[1];
   out_175890247565689822[2] = -nom_x[2] + true_x[2];
   out_175890247565689822[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_175890247565689822[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_175890247565689822[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_175890247565689822[6] = -nom_x[7] + true_x[7];
   out_175890247565689822[7] = -nom_x[8] + true_x[8];
   out_175890247565689822[8] = -nom_x[9] + true_x[9];
   out_175890247565689822[9] = -nom_x[10] + true_x[10];
   out_175890247565689822[10] = -nom_x[11] + true_x[11];
   out_175890247565689822[11] = -nom_x[12] + true_x[12];
   out_175890247565689822[12] = -nom_x[13] + true_x[13];
   out_175890247565689822[13] = -nom_x[14] + true_x[14];
   out_175890247565689822[14] = -nom_x[15] + true_x[15];
   out_175890247565689822[15] = -nom_x[16] + true_x[16];
   out_175890247565689822[16] = -nom_x[17] + true_x[17];
   out_175890247565689822[17] = -nom_x[18] + true_x[18];
   out_175890247565689822[18] = -nom_x[19] + true_x[19];
   out_175890247565689822[19] = -nom_x[20] + true_x[20];
   out_175890247565689822[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7389402166843712978) {
   out_7389402166843712978[0] = 1.0;
   out_7389402166843712978[1] = 0;
   out_7389402166843712978[2] = 0;
   out_7389402166843712978[3] = 0;
   out_7389402166843712978[4] = 0;
   out_7389402166843712978[5] = 0;
   out_7389402166843712978[6] = 0;
   out_7389402166843712978[7] = 0;
   out_7389402166843712978[8] = 0;
   out_7389402166843712978[9] = 0;
   out_7389402166843712978[10] = 0;
   out_7389402166843712978[11] = 0;
   out_7389402166843712978[12] = 0;
   out_7389402166843712978[13] = 0;
   out_7389402166843712978[14] = 0;
   out_7389402166843712978[15] = 0;
   out_7389402166843712978[16] = 0;
   out_7389402166843712978[17] = 0;
   out_7389402166843712978[18] = 0;
   out_7389402166843712978[19] = 0;
   out_7389402166843712978[20] = 0;
   out_7389402166843712978[21] = 0;
   out_7389402166843712978[22] = 1.0;
   out_7389402166843712978[23] = 0;
   out_7389402166843712978[24] = 0;
   out_7389402166843712978[25] = 0;
   out_7389402166843712978[26] = 0;
   out_7389402166843712978[27] = 0;
   out_7389402166843712978[28] = 0;
   out_7389402166843712978[29] = 0;
   out_7389402166843712978[30] = 0;
   out_7389402166843712978[31] = 0;
   out_7389402166843712978[32] = 0;
   out_7389402166843712978[33] = 0;
   out_7389402166843712978[34] = 0;
   out_7389402166843712978[35] = 0;
   out_7389402166843712978[36] = 0;
   out_7389402166843712978[37] = 0;
   out_7389402166843712978[38] = 0;
   out_7389402166843712978[39] = 0;
   out_7389402166843712978[40] = 0;
   out_7389402166843712978[41] = 0;
   out_7389402166843712978[42] = 0;
   out_7389402166843712978[43] = 0;
   out_7389402166843712978[44] = 1.0;
   out_7389402166843712978[45] = 0;
   out_7389402166843712978[46] = 0;
   out_7389402166843712978[47] = 0;
   out_7389402166843712978[48] = 0;
   out_7389402166843712978[49] = 0;
   out_7389402166843712978[50] = 0;
   out_7389402166843712978[51] = 0;
   out_7389402166843712978[52] = 0;
   out_7389402166843712978[53] = 0;
   out_7389402166843712978[54] = 0;
   out_7389402166843712978[55] = 0;
   out_7389402166843712978[56] = 0;
   out_7389402166843712978[57] = 0;
   out_7389402166843712978[58] = 0;
   out_7389402166843712978[59] = 0;
   out_7389402166843712978[60] = 0;
   out_7389402166843712978[61] = 0;
   out_7389402166843712978[62] = 0;
   out_7389402166843712978[63] = 0;
   out_7389402166843712978[64] = 0;
   out_7389402166843712978[65] = 0;
   out_7389402166843712978[66] = -0.5*state[4];
   out_7389402166843712978[67] = -0.5*state[5];
   out_7389402166843712978[68] = -0.5*state[6];
   out_7389402166843712978[69] = 0;
   out_7389402166843712978[70] = 0;
   out_7389402166843712978[71] = 0;
   out_7389402166843712978[72] = 0;
   out_7389402166843712978[73] = 0;
   out_7389402166843712978[74] = 0;
   out_7389402166843712978[75] = 0;
   out_7389402166843712978[76] = 0;
   out_7389402166843712978[77] = 0;
   out_7389402166843712978[78] = 0;
   out_7389402166843712978[79] = 0;
   out_7389402166843712978[80] = 0;
   out_7389402166843712978[81] = 0;
   out_7389402166843712978[82] = 0;
   out_7389402166843712978[83] = 0;
   out_7389402166843712978[84] = 0;
   out_7389402166843712978[85] = 0;
   out_7389402166843712978[86] = 0;
   out_7389402166843712978[87] = 0.5*state[3];
   out_7389402166843712978[88] = 0.5*state[6];
   out_7389402166843712978[89] = -0.5*state[5];
   out_7389402166843712978[90] = 0;
   out_7389402166843712978[91] = 0;
   out_7389402166843712978[92] = 0;
   out_7389402166843712978[93] = 0;
   out_7389402166843712978[94] = 0;
   out_7389402166843712978[95] = 0;
   out_7389402166843712978[96] = 0;
   out_7389402166843712978[97] = 0;
   out_7389402166843712978[98] = 0;
   out_7389402166843712978[99] = 0;
   out_7389402166843712978[100] = 0;
   out_7389402166843712978[101] = 0;
   out_7389402166843712978[102] = 0;
   out_7389402166843712978[103] = 0;
   out_7389402166843712978[104] = 0;
   out_7389402166843712978[105] = 0;
   out_7389402166843712978[106] = 0;
   out_7389402166843712978[107] = 0;
   out_7389402166843712978[108] = -0.5*state[6];
   out_7389402166843712978[109] = 0.5*state[3];
   out_7389402166843712978[110] = 0.5*state[4];
   out_7389402166843712978[111] = 0;
   out_7389402166843712978[112] = 0;
   out_7389402166843712978[113] = 0;
   out_7389402166843712978[114] = 0;
   out_7389402166843712978[115] = 0;
   out_7389402166843712978[116] = 0;
   out_7389402166843712978[117] = 0;
   out_7389402166843712978[118] = 0;
   out_7389402166843712978[119] = 0;
   out_7389402166843712978[120] = 0;
   out_7389402166843712978[121] = 0;
   out_7389402166843712978[122] = 0;
   out_7389402166843712978[123] = 0;
   out_7389402166843712978[124] = 0;
   out_7389402166843712978[125] = 0;
   out_7389402166843712978[126] = 0;
   out_7389402166843712978[127] = 0;
   out_7389402166843712978[128] = 0;
   out_7389402166843712978[129] = 0.5*state[5];
   out_7389402166843712978[130] = -0.5*state[4];
   out_7389402166843712978[131] = 0.5*state[3];
   out_7389402166843712978[132] = 0;
   out_7389402166843712978[133] = 0;
   out_7389402166843712978[134] = 0;
   out_7389402166843712978[135] = 0;
   out_7389402166843712978[136] = 0;
   out_7389402166843712978[137] = 0;
   out_7389402166843712978[138] = 0;
   out_7389402166843712978[139] = 0;
   out_7389402166843712978[140] = 0;
   out_7389402166843712978[141] = 0;
   out_7389402166843712978[142] = 0;
   out_7389402166843712978[143] = 0;
   out_7389402166843712978[144] = 0;
   out_7389402166843712978[145] = 0;
   out_7389402166843712978[146] = 0;
   out_7389402166843712978[147] = 0;
   out_7389402166843712978[148] = 0;
   out_7389402166843712978[149] = 0;
   out_7389402166843712978[150] = 0;
   out_7389402166843712978[151] = 0;
   out_7389402166843712978[152] = 0;
   out_7389402166843712978[153] = 1.0;
   out_7389402166843712978[154] = 0;
   out_7389402166843712978[155] = 0;
   out_7389402166843712978[156] = 0;
   out_7389402166843712978[157] = 0;
   out_7389402166843712978[158] = 0;
   out_7389402166843712978[159] = 0;
   out_7389402166843712978[160] = 0;
   out_7389402166843712978[161] = 0;
   out_7389402166843712978[162] = 0;
   out_7389402166843712978[163] = 0;
   out_7389402166843712978[164] = 0;
   out_7389402166843712978[165] = 0;
   out_7389402166843712978[166] = 0;
   out_7389402166843712978[167] = 0;
   out_7389402166843712978[168] = 0;
   out_7389402166843712978[169] = 0;
   out_7389402166843712978[170] = 0;
   out_7389402166843712978[171] = 0;
   out_7389402166843712978[172] = 0;
   out_7389402166843712978[173] = 0;
   out_7389402166843712978[174] = 0;
   out_7389402166843712978[175] = 1.0;
   out_7389402166843712978[176] = 0;
   out_7389402166843712978[177] = 0;
   out_7389402166843712978[178] = 0;
   out_7389402166843712978[179] = 0;
   out_7389402166843712978[180] = 0;
   out_7389402166843712978[181] = 0;
   out_7389402166843712978[182] = 0;
   out_7389402166843712978[183] = 0;
   out_7389402166843712978[184] = 0;
   out_7389402166843712978[185] = 0;
   out_7389402166843712978[186] = 0;
   out_7389402166843712978[187] = 0;
   out_7389402166843712978[188] = 0;
   out_7389402166843712978[189] = 0;
   out_7389402166843712978[190] = 0;
   out_7389402166843712978[191] = 0;
   out_7389402166843712978[192] = 0;
   out_7389402166843712978[193] = 0;
   out_7389402166843712978[194] = 0;
   out_7389402166843712978[195] = 0;
   out_7389402166843712978[196] = 0;
   out_7389402166843712978[197] = 1.0;
   out_7389402166843712978[198] = 0;
   out_7389402166843712978[199] = 0;
   out_7389402166843712978[200] = 0;
   out_7389402166843712978[201] = 0;
   out_7389402166843712978[202] = 0;
   out_7389402166843712978[203] = 0;
   out_7389402166843712978[204] = 0;
   out_7389402166843712978[205] = 0;
   out_7389402166843712978[206] = 0;
   out_7389402166843712978[207] = 0;
   out_7389402166843712978[208] = 0;
   out_7389402166843712978[209] = 0;
   out_7389402166843712978[210] = 0;
   out_7389402166843712978[211] = 0;
   out_7389402166843712978[212] = 0;
   out_7389402166843712978[213] = 0;
   out_7389402166843712978[214] = 0;
   out_7389402166843712978[215] = 0;
   out_7389402166843712978[216] = 0;
   out_7389402166843712978[217] = 0;
   out_7389402166843712978[218] = 0;
   out_7389402166843712978[219] = 1.0;
   out_7389402166843712978[220] = 0;
   out_7389402166843712978[221] = 0;
   out_7389402166843712978[222] = 0;
   out_7389402166843712978[223] = 0;
   out_7389402166843712978[224] = 0;
   out_7389402166843712978[225] = 0;
   out_7389402166843712978[226] = 0;
   out_7389402166843712978[227] = 0;
   out_7389402166843712978[228] = 0;
   out_7389402166843712978[229] = 0;
   out_7389402166843712978[230] = 0;
   out_7389402166843712978[231] = 0;
   out_7389402166843712978[232] = 0;
   out_7389402166843712978[233] = 0;
   out_7389402166843712978[234] = 0;
   out_7389402166843712978[235] = 0;
   out_7389402166843712978[236] = 0;
   out_7389402166843712978[237] = 0;
   out_7389402166843712978[238] = 0;
   out_7389402166843712978[239] = 0;
   out_7389402166843712978[240] = 0;
   out_7389402166843712978[241] = 1.0;
   out_7389402166843712978[242] = 0;
   out_7389402166843712978[243] = 0;
   out_7389402166843712978[244] = 0;
   out_7389402166843712978[245] = 0;
   out_7389402166843712978[246] = 0;
   out_7389402166843712978[247] = 0;
   out_7389402166843712978[248] = 0;
   out_7389402166843712978[249] = 0;
   out_7389402166843712978[250] = 0;
   out_7389402166843712978[251] = 0;
   out_7389402166843712978[252] = 0;
   out_7389402166843712978[253] = 0;
   out_7389402166843712978[254] = 0;
   out_7389402166843712978[255] = 0;
   out_7389402166843712978[256] = 0;
   out_7389402166843712978[257] = 0;
   out_7389402166843712978[258] = 0;
   out_7389402166843712978[259] = 0;
   out_7389402166843712978[260] = 0;
   out_7389402166843712978[261] = 0;
   out_7389402166843712978[262] = 0;
   out_7389402166843712978[263] = 1.0;
   out_7389402166843712978[264] = 0;
   out_7389402166843712978[265] = 0;
   out_7389402166843712978[266] = 0;
   out_7389402166843712978[267] = 0;
   out_7389402166843712978[268] = 0;
   out_7389402166843712978[269] = 0;
   out_7389402166843712978[270] = 0;
   out_7389402166843712978[271] = 0;
   out_7389402166843712978[272] = 0;
   out_7389402166843712978[273] = 0;
   out_7389402166843712978[274] = 0;
   out_7389402166843712978[275] = 0;
   out_7389402166843712978[276] = 0;
   out_7389402166843712978[277] = 0;
   out_7389402166843712978[278] = 0;
   out_7389402166843712978[279] = 0;
   out_7389402166843712978[280] = 0;
   out_7389402166843712978[281] = 0;
   out_7389402166843712978[282] = 0;
   out_7389402166843712978[283] = 0;
   out_7389402166843712978[284] = 0;
   out_7389402166843712978[285] = 1.0;
   out_7389402166843712978[286] = 0;
   out_7389402166843712978[287] = 0;
   out_7389402166843712978[288] = 0;
   out_7389402166843712978[289] = 0;
   out_7389402166843712978[290] = 0;
   out_7389402166843712978[291] = 0;
   out_7389402166843712978[292] = 0;
   out_7389402166843712978[293] = 0;
   out_7389402166843712978[294] = 0;
   out_7389402166843712978[295] = 0;
   out_7389402166843712978[296] = 0;
   out_7389402166843712978[297] = 0;
   out_7389402166843712978[298] = 0;
   out_7389402166843712978[299] = 0;
   out_7389402166843712978[300] = 0;
   out_7389402166843712978[301] = 0;
   out_7389402166843712978[302] = 0;
   out_7389402166843712978[303] = 0;
   out_7389402166843712978[304] = 0;
   out_7389402166843712978[305] = 0;
   out_7389402166843712978[306] = 0;
   out_7389402166843712978[307] = 1.0;
   out_7389402166843712978[308] = 0;
   out_7389402166843712978[309] = 0;
   out_7389402166843712978[310] = 0;
   out_7389402166843712978[311] = 0;
   out_7389402166843712978[312] = 0;
   out_7389402166843712978[313] = 0;
   out_7389402166843712978[314] = 0;
   out_7389402166843712978[315] = 0;
   out_7389402166843712978[316] = 0;
   out_7389402166843712978[317] = 0;
   out_7389402166843712978[318] = 0;
   out_7389402166843712978[319] = 0;
   out_7389402166843712978[320] = 0;
   out_7389402166843712978[321] = 0;
   out_7389402166843712978[322] = 0;
   out_7389402166843712978[323] = 0;
   out_7389402166843712978[324] = 0;
   out_7389402166843712978[325] = 0;
   out_7389402166843712978[326] = 0;
   out_7389402166843712978[327] = 0;
   out_7389402166843712978[328] = 0;
   out_7389402166843712978[329] = 1.0;
   out_7389402166843712978[330] = 0;
   out_7389402166843712978[331] = 0;
   out_7389402166843712978[332] = 0;
   out_7389402166843712978[333] = 0;
   out_7389402166843712978[334] = 0;
   out_7389402166843712978[335] = 0;
   out_7389402166843712978[336] = 0;
   out_7389402166843712978[337] = 0;
   out_7389402166843712978[338] = 0;
   out_7389402166843712978[339] = 0;
   out_7389402166843712978[340] = 0;
   out_7389402166843712978[341] = 0;
   out_7389402166843712978[342] = 0;
   out_7389402166843712978[343] = 0;
   out_7389402166843712978[344] = 0;
   out_7389402166843712978[345] = 0;
   out_7389402166843712978[346] = 0;
   out_7389402166843712978[347] = 0;
   out_7389402166843712978[348] = 0;
   out_7389402166843712978[349] = 0;
   out_7389402166843712978[350] = 0;
   out_7389402166843712978[351] = 1.0;
   out_7389402166843712978[352] = 0;
   out_7389402166843712978[353] = 0;
   out_7389402166843712978[354] = 0;
   out_7389402166843712978[355] = 0;
   out_7389402166843712978[356] = 0;
   out_7389402166843712978[357] = 0;
   out_7389402166843712978[358] = 0;
   out_7389402166843712978[359] = 0;
   out_7389402166843712978[360] = 0;
   out_7389402166843712978[361] = 0;
   out_7389402166843712978[362] = 0;
   out_7389402166843712978[363] = 0;
   out_7389402166843712978[364] = 0;
   out_7389402166843712978[365] = 0;
   out_7389402166843712978[366] = 0;
   out_7389402166843712978[367] = 0;
   out_7389402166843712978[368] = 0;
   out_7389402166843712978[369] = 0;
   out_7389402166843712978[370] = 0;
   out_7389402166843712978[371] = 0;
   out_7389402166843712978[372] = 0;
   out_7389402166843712978[373] = 1.0;
   out_7389402166843712978[374] = 0;
   out_7389402166843712978[375] = 0;
   out_7389402166843712978[376] = 0;
   out_7389402166843712978[377] = 0;
   out_7389402166843712978[378] = 0;
   out_7389402166843712978[379] = 0;
   out_7389402166843712978[380] = 0;
   out_7389402166843712978[381] = 0;
   out_7389402166843712978[382] = 0;
   out_7389402166843712978[383] = 0;
   out_7389402166843712978[384] = 0;
   out_7389402166843712978[385] = 0;
   out_7389402166843712978[386] = 0;
   out_7389402166843712978[387] = 0;
   out_7389402166843712978[388] = 0;
   out_7389402166843712978[389] = 0;
   out_7389402166843712978[390] = 0;
   out_7389402166843712978[391] = 0;
   out_7389402166843712978[392] = 0;
   out_7389402166843712978[393] = 0;
   out_7389402166843712978[394] = 0;
   out_7389402166843712978[395] = 1.0;
   out_7389402166843712978[396] = 0;
   out_7389402166843712978[397] = 0;
   out_7389402166843712978[398] = 0;
   out_7389402166843712978[399] = 0;
   out_7389402166843712978[400] = 0;
   out_7389402166843712978[401] = 0;
   out_7389402166843712978[402] = 0;
   out_7389402166843712978[403] = 0;
   out_7389402166843712978[404] = 0;
   out_7389402166843712978[405] = 0;
   out_7389402166843712978[406] = 0;
   out_7389402166843712978[407] = 0;
   out_7389402166843712978[408] = 0;
   out_7389402166843712978[409] = 0;
   out_7389402166843712978[410] = 0;
   out_7389402166843712978[411] = 0;
   out_7389402166843712978[412] = 0;
   out_7389402166843712978[413] = 0;
   out_7389402166843712978[414] = 0;
   out_7389402166843712978[415] = 0;
   out_7389402166843712978[416] = 0;
   out_7389402166843712978[417] = 1.0;
   out_7389402166843712978[418] = 0;
   out_7389402166843712978[419] = 0;
   out_7389402166843712978[420] = 0;
   out_7389402166843712978[421] = 0;
   out_7389402166843712978[422] = 0;
   out_7389402166843712978[423] = 0;
   out_7389402166843712978[424] = 0;
   out_7389402166843712978[425] = 0;
   out_7389402166843712978[426] = 0;
   out_7389402166843712978[427] = 0;
   out_7389402166843712978[428] = 0;
   out_7389402166843712978[429] = 0;
   out_7389402166843712978[430] = 0;
   out_7389402166843712978[431] = 0;
   out_7389402166843712978[432] = 0;
   out_7389402166843712978[433] = 0;
   out_7389402166843712978[434] = 0;
   out_7389402166843712978[435] = 0;
   out_7389402166843712978[436] = 0;
   out_7389402166843712978[437] = 0;
   out_7389402166843712978[438] = 0;
   out_7389402166843712978[439] = 1.0;
   out_7389402166843712978[440] = 0;
   out_7389402166843712978[441] = 0;
   out_7389402166843712978[442] = 0;
   out_7389402166843712978[443] = 0;
   out_7389402166843712978[444] = 0;
   out_7389402166843712978[445] = 0;
   out_7389402166843712978[446] = 0;
   out_7389402166843712978[447] = 0;
   out_7389402166843712978[448] = 0;
   out_7389402166843712978[449] = 0;
   out_7389402166843712978[450] = 0;
   out_7389402166843712978[451] = 0;
   out_7389402166843712978[452] = 0;
   out_7389402166843712978[453] = 0;
   out_7389402166843712978[454] = 0;
   out_7389402166843712978[455] = 0;
   out_7389402166843712978[456] = 0;
   out_7389402166843712978[457] = 0;
   out_7389402166843712978[458] = 0;
   out_7389402166843712978[459] = 0;
   out_7389402166843712978[460] = 0;
   out_7389402166843712978[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_2578146559919125658) {
   out_2578146559919125658[0] = dt*state[7] + state[0];
   out_2578146559919125658[1] = dt*state[8] + state[1];
   out_2578146559919125658[2] = dt*state[9] + state[2];
   out_2578146559919125658[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_2578146559919125658[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_2578146559919125658[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_2578146559919125658[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_2578146559919125658[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_2578146559919125658[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_2578146559919125658[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_2578146559919125658[10] = state[10];
   out_2578146559919125658[11] = state[11];
   out_2578146559919125658[12] = state[12];
   out_2578146559919125658[13] = state[13];
   out_2578146559919125658[14] = state[14];
   out_2578146559919125658[15] = state[15];
   out_2578146559919125658[16] = state[16];
   out_2578146559919125658[17] = state[17];
   out_2578146559919125658[18] = state[18];
   out_2578146559919125658[19] = state[19];
   out_2578146559919125658[20] = state[20];
   out_2578146559919125658[21] = state[21];
}
void F_fun(double *state, double dt, double *out_3498573013962149813) {
   out_3498573013962149813[0] = 1;
   out_3498573013962149813[1] = 0;
   out_3498573013962149813[2] = 0;
   out_3498573013962149813[3] = 0;
   out_3498573013962149813[4] = 0;
   out_3498573013962149813[5] = 0;
   out_3498573013962149813[6] = dt;
   out_3498573013962149813[7] = 0;
   out_3498573013962149813[8] = 0;
   out_3498573013962149813[9] = 0;
   out_3498573013962149813[10] = 0;
   out_3498573013962149813[11] = 0;
   out_3498573013962149813[12] = 0;
   out_3498573013962149813[13] = 0;
   out_3498573013962149813[14] = 0;
   out_3498573013962149813[15] = 0;
   out_3498573013962149813[16] = 0;
   out_3498573013962149813[17] = 0;
   out_3498573013962149813[18] = 0;
   out_3498573013962149813[19] = 0;
   out_3498573013962149813[20] = 0;
   out_3498573013962149813[21] = 0;
   out_3498573013962149813[22] = 1;
   out_3498573013962149813[23] = 0;
   out_3498573013962149813[24] = 0;
   out_3498573013962149813[25] = 0;
   out_3498573013962149813[26] = 0;
   out_3498573013962149813[27] = 0;
   out_3498573013962149813[28] = dt;
   out_3498573013962149813[29] = 0;
   out_3498573013962149813[30] = 0;
   out_3498573013962149813[31] = 0;
   out_3498573013962149813[32] = 0;
   out_3498573013962149813[33] = 0;
   out_3498573013962149813[34] = 0;
   out_3498573013962149813[35] = 0;
   out_3498573013962149813[36] = 0;
   out_3498573013962149813[37] = 0;
   out_3498573013962149813[38] = 0;
   out_3498573013962149813[39] = 0;
   out_3498573013962149813[40] = 0;
   out_3498573013962149813[41] = 0;
   out_3498573013962149813[42] = 0;
   out_3498573013962149813[43] = 0;
   out_3498573013962149813[44] = 1;
   out_3498573013962149813[45] = 0;
   out_3498573013962149813[46] = 0;
   out_3498573013962149813[47] = 0;
   out_3498573013962149813[48] = 0;
   out_3498573013962149813[49] = 0;
   out_3498573013962149813[50] = dt;
   out_3498573013962149813[51] = 0;
   out_3498573013962149813[52] = 0;
   out_3498573013962149813[53] = 0;
   out_3498573013962149813[54] = 0;
   out_3498573013962149813[55] = 0;
   out_3498573013962149813[56] = 0;
   out_3498573013962149813[57] = 0;
   out_3498573013962149813[58] = 0;
   out_3498573013962149813[59] = 0;
   out_3498573013962149813[60] = 0;
   out_3498573013962149813[61] = 0;
   out_3498573013962149813[62] = 0;
   out_3498573013962149813[63] = 0;
   out_3498573013962149813[64] = 0;
   out_3498573013962149813[65] = 0;
   out_3498573013962149813[66] = 1;
   out_3498573013962149813[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3498573013962149813[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_3498573013962149813[69] = 0;
   out_3498573013962149813[70] = 0;
   out_3498573013962149813[71] = 0;
   out_3498573013962149813[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3498573013962149813[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3498573013962149813[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3498573013962149813[75] = 0;
   out_3498573013962149813[76] = 0;
   out_3498573013962149813[77] = 0;
   out_3498573013962149813[78] = 0;
   out_3498573013962149813[79] = 0;
   out_3498573013962149813[80] = 0;
   out_3498573013962149813[81] = 0;
   out_3498573013962149813[82] = 0;
   out_3498573013962149813[83] = 0;
   out_3498573013962149813[84] = 0;
   out_3498573013962149813[85] = 0;
   out_3498573013962149813[86] = 0;
   out_3498573013962149813[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_3498573013962149813[88] = 1;
   out_3498573013962149813[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_3498573013962149813[90] = 0;
   out_3498573013962149813[91] = 0;
   out_3498573013962149813[92] = 0;
   out_3498573013962149813[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3498573013962149813[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3498573013962149813[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3498573013962149813[96] = 0;
   out_3498573013962149813[97] = 0;
   out_3498573013962149813[98] = 0;
   out_3498573013962149813[99] = 0;
   out_3498573013962149813[100] = 0;
   out_3498573013962149813[101] = 0;
   out_3498573013962149813[102] = 0;
   out_3498573013962149813[103] = 0;
   out_3498573013962149813[104] = 0;
   out_3498573013962149813[105] = 0;
   out_3498573013962149813[106] = 0;
   out_3498573013962149813[107] = 0;
   out_3498573013962149813[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_3498573013962149813[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_3498573013962149813[110] = 1;
   out_3498573013962149813[111] = 0;
   out_3498573013962149813[112] = 0;
   out_3498573013962149813[113] = 0;
   out_3498573013962149813[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3498573013962149813[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3498573013962149813[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3498573013962149813[117] = 0;
   out_3498573013962149813[118] = 0;
   out_3498573013962149813[119] = 0;
   out_3498573013962149813[120] = 0;
   out_3498573013962149813[121] = 0;
   out_3498573013962149813[122] = 0;
   out_3498573013962149813[123] = 0;
   out_3498573013962149813[124] = 0;
   out_3498573013962149813[125] = 0;
   out_3498573013962149813[126] = 0;
   out_3498573013962149813[127] = 0;
   out_3498573013962149813[128] = 0;
   out_3498573013962149813[129] = 0;
   out_3498573013962149813[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3498573013962149813[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_3498573013962149813[132] = 1;
   out_3498573013962149813[133] = 0;
   out_3498573013962149813[134] = 0;
   out_3498573013962149813[135] = 0;
   out_3498573013962149813[136] = 0;
   out_3498573013962149813[137] = 0;
   out_3498573013962149813[138] = 0;
   out_3498573013962149813[139] = 0;
   out_3498573013962149813[140] = 0;
   out_3498573013962149813[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3498573013962149813[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3498573013962149813[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3498573013962149813[144] = 0;
   out_3498573013962149813[145] = 0;
   out_3498573013962149813[146] = 0;
   out_3498573013962149813[147] = 0;
   out_3498573013962149813[148] = 0;
   out_3498573013962149813[149] = 0;
   out_3498573013962149813[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_3498573013962149813[151] = 0;
   out_3498573013962149813[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_3498573013962149813[153] = 0;
   out_3498573013962149813[154] = 1;
   out_3498573013962149813[155] = 0;
   out_3498573013962149813[156] = 0;
   out_3498573013962149813[157] = 0;
   out_3498573013962149813[158] = 0;
   out_3498573013962149813[159] = 0;
   out_3498573013962149813[160] = 0;
   out_3498573013962149813[161] = 0;
   out_3498573013962149813[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_3498573013962149813[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3498573013962149813[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3498573013962149813[165] = 0;
   out_3498573013962149813[166] = 0;
   out_3498573013962149813[167] = 0;
   out_3498573013962149813[168] = 0;
   out_3498573013962149813[169] = 0;
   out_3498573013962149813[170] = 0;
   out_3498573013962149813[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_3498573013962149813[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_3498573013962149813[173] = 0;
   out_3498573013962149813[174] = 0;
   out_3498573013962149813[175] = 0;
   out_3498573013962149813[176] = 1;
   out_3498573013962149813[177] = 0;
   out_3498573013962149813[178] = 0;
   out_3498573013962149813[179] = 0;
   out_3498573013962149813[180] = 0;
   out_3498573013962149813[181] = 0;
   out_3498573013962149813[182] = 0;
   out_3498573013962149813[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_3498573013962149813[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_3498573013962149813[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3498573013962149813[186] = 0;
   out_3498573013962149813[187] = 0;
   out_3498573013962149813[188] = 0;
   out_3498573013962149813[189] = 0;
   out_3498573013962149813[190] = 0;
   out_3498573013962149813[191] = 0;
   out_3498573013962149813[192] = 0;
   out_3498573013962149813[193] = 0;
   out_3498573013962149813[194] = 0;
   out_3498573013962149813[195] = 0;
   out_3498573013962149813[196] = 0;
   out_3498573013962149813[197] = 0;
   out_3498573013962149813[198] = 1;
   out_3498573013962149813[199] = 0;
   out_3498573013962149813[200] = 0;
   out_3498573013962149813[201] = 0;
   out_3498573013962149813[202] = 0;
   out_3498573013962149813[203] = 0;
   out_3498573013962149813[204] = 0;
   out_3498573013962149813[205] = 0;
   out_3498573013962149813[206] = 0;
   out_3498573013962149813[207] = 0;
   out_3498573013962149813[208] = 0;
   out_3498573013962149813[209] = 0;
   out_3498573013962149813[210] = 0;
   out_3498573013962149813[211] = 0;
   out_3498573013962149813[212] = 0;
   out_3498573013962149813[213] = 0;
   out_3498573013962149813[214] = 0;
   out_3498573013962149813[215] = 0;
   out_3498573013962149813[216] = 0;
   out_3498573013962149813[217] = 0;
   out_3498573013962149813[218] = 0;
   out_3498573013962149813[219] = 0;
   out_3498573013962149813[220] = 1;
   out_3498573013962149813[221] = 0;
   out_3498573013962149813[222] = 0;
   out_3498573013962149813[223] = 0;
   out_3498573013962149813[224] = 0;
   out_3498573013962149813[225] = 0;
   out_3498573013962149813[226] = 0;
   out_3498573013962149813[227] = 0;
   out_3498573013962149813[228] = 0;
   out_3498573013962149813[229] = 0;
   out_3498573013962149813[230] = 0;
   out_3498573013962149813[231] = 0;
   out_3498573013962149813[232] = 0;
   out_3498573013962149813[233] = 0;
   out_3498573013962149813[234] = 0;
   out_3498573013962149813[235] = 0;
   out_3498573013962149813[236] = 0;
   out_3498573013962149813[237] = 0;
   out_3498573013962149813[238] = 0;
   out_3498573013962149813[239] = 0;
   out_3498573013962149813[240] = 0;
   out_3498573013962149813[241] = 0;
   out_3498573013962149813[242] = 1;
   out_3498573013962149813[243] = 0;
   out_3498573013962149813[244] = 0;
   out_3498573013962149813[245] = 0;
   out_3498573013962149813[246] = 0;
   out_3498573013962149813[247] = 0;
   out_3498573013962149813[248] = 0;
   out_3498573013962149813[249] = 0;
   out_3498573013962149813[250] = 0;
   out_3498573013962149813[251] = 0;
   out_3498573013962149813[252] = 0;
   out_3498573013962149813[253] = 0;
   out_3498573013962149813[254] = 0;
   out_3498573013962149813[255] = 0;
   out_3498573013962149813[256] = 0;
   out_3498573013962149813[257] = 0;
   out_3498573013962149813[258] = 0;
   out_3498573013962149813[259] = 0;
   out_3498573013962149813[260] = 0;
   out_3498573013962149813[261] = 0;
   out_3498573013962149813[262] = 0;
   out_3498573013962149813[263] = 0;
   out_3498573013962149813[264] = 1;
   out_3498573013962149813[265] = 0;
   out_3498573013962149813[266] = 0;
   out_3498573013962149813[267] = 0;
   out_3498573013962149813[268] = 0;
   out_3498573013962149813[269] = 0;
   out_3498573013962149813[270] = 0;
   out_3498573013962149813[271] = 0;
   out_3498573013962149813[272] = 0;
   out_3498573013962149813[273] = 0;
   out_3498573013962149813[274] = 0;
   out_3498573013962149813[275] = 0;
   out_3498573013962149813[276] = 0;
   out_3498573013962149813[277] = 0;
   out_3498573013962149813[278] = 0;
   out_3498573013962149813[279] = 0;
   out_3498573013962149813[280] = 0;
   out_3498573013962149813[281] = 0;
   out_3498573013962149813[282] = 0;
   out_3498573013962149813[283] = 0;
   out_3498573013962149813[284] = 0;
   out_3498573013962149813[285] = 0;
   out_3498573013962149813[286] = 1;
   out_3498573013962149813[287] = 0;
   out_3498573013962149813[288] = 0;
   out_3498573013962149813[289] = 0;
   out_3498573013962149813[290] = 0;
   out_3498573013962149813[291] = 0;
   out_3498573013962149813[292] = 0;
   out_3498573013962149813[293] = 0;
   out_3498573013962149813[294] = 0;
   out_3498573013962149813[295] = 0;
   out_3498573013962149813[296] = 0;
   out_3498573013962149813[297] = 0;
   out_3498573013962149813[298] = 0;
   out_3498573013962149813[299] = 0;
   out_3498573013962149813[300] = 0;
   out_3498573013962149813[301] = 0;
   out_3498573013962149813[302] = 0;
   out_3498573013962149813[303] = 0;
   out_3498573013962149813[304] = 0;
   out_3498573013962149813[305] = 0;
   out_3498573013962149813[306] = 0;
   out_3498573013962149813[307] = 0;
   out_3498573013962149813[308] = 1;
   out_3498573013962149813[309] = 0;
   out_3498573013962149813[310] = 0;
   out_3498573013962149813[311] = 0;
   out_3498573013962149813[312] = 0;
   out_3498573013962149813[313] = 0;
   out_3498573013962149813[314] = 0;
   out_3498573013962149813[315] = 0;
   out_3498573013962149813[316] = 0;
   out_3498573013962149813[317] = 0;
   out_3498573013962149813[318] = 0;
   out_3498573013962149813[319] = 0;
   out_3498573013962149813[320] = 0;
   out_3498573013962149813[321] = 0;
   out_3498573013962149813[322] = 0;
   out_3498573013962149813[323] = 0;
   out_3498573013962149813[324] = 0;
   out_3498573013962149813[325] = 0;
   out_3498573013962149813[326] = 0;
   out_3498573013962149813[327] = 0;
   out_3498573013962149813[328] = 0;
   out_3498573013962149813[329] = 0;
   out_3498573013962149813[330] = 1;
   out_3498573013962149813[331] = 0;
   out_3498573013962149813[332] = 0;
   out_3498573013962149813[333] = 0;
   out_3498573013962149813[334] = 0;
   out_3498573013962149813[335] = 0;
   out_3498573013962149813[336] = 0;
   out_3498573013962149813[337] = 0;
   out_3498573013962149813[338] = 0;
   out_3498573013962149813[339] = 0;
   out_3498573013962149813[340] = 0;
   out_3498573013962149813[341] = 0;
   out_3498573013962149813[342] = 0;
   out_3498573013962149813[343] = 0;
   out_3498573013962149813[344] = 0;
   out_3498573013962149813[345] = 0;
   out_3498573013962149813[346] = 0;
   out_3498573013962149813[347] = 0;
   out_3498573013962149813[348] = 0;
   out_3498573013962149813[349] = 0;
   out_3498573013962149813[350] = 0;
   out_3498573013962149813[351] = 0;
   out_3498573013962149813[352] = 1;
   out_3498573013962149813[353] = 0;
   out_3498573013962149813[354] = 0;
   out_3498573013962149813[355] = 0;
   out_3498573013962149813[356] = 0;
   out_3498573013962149813[357] = 0;
   out_3498573013962149813[358] = 0;
   out_3498573013962149813[359] = 0;
   out_3498573013962149813[360] = 0;
   out_3498573013962149813[361] = 0;
   out_3498573013962149813[362] = 0;
   out_3498573013962149813[363] = 0;
   out_3498573013962149813[364] = 0;
   out_3498573013962149813[365] = 0;
   out_3498573013962149813[366] = 0;
   out_3498573013962149813[367] = 0;
   out_3498573013962149813[368] = 0;
   out_3498573013962149813[369] = 0;
   out_3498573013962149813[370] = 0;
   out_3498573013962149813[371] = 0;
   out_3498573013962149813[372] = 0;
   out_3498573013962149813[373] = 0;
   out_3498573013962149813[374] = 1;
   out_3498573013962149813[375] = 0;
   out_3498573013962149813[376] = 0;
   out_3498573013962149813[377] = 0;
   out_3498573013962149813[378] = 0;
   out_3498573013962149813[379] = 0;
   out_3498573013962149813[380] = 0;
   out_3498573013962149813[381] = 0;
   out_3498573013962149813[382] = 0;
   out_3498573013962149813[383] = 0;
   out_3498573013962149813[384] = 0;
   out_3498573013962149813[385] = 0;
   out_3498573013962149813[386] = 0;
   out_3498573013962149813[387] = 0;
   out_3498573013962149813[388] = 0;
   out_3498573013962149813[389] = 0;
   out_3498573013962149813[390] = 0;
   out_3498573013962149813[391] = 0;
   out_3498573013962149813[392] = 0;
   out_3498573013962149813[393] = 0;
   out_3498573013962149813[394] = 0;
   out_3498573013962149813[395] = 0;
   out_3498573013962149813[396] = 1;
   out_3498573013962149813[397] = 0;
   out_3498573013962149813[398] = 0;
   out_3498573013962149813[399] = 0;
   out_3498573013962149813[400] = 0;
   out_3498573013962149813[401] = 0;
   out_3498573013962149813[402] = 0;
   out_3498573013962149813[403] = 0;
   out_3498573013962149813[404] = 0;
   out_3498573013962149813[405] = 0;
   out_3498573013962149813[406] = 0;
   out_3498573013962149813[407] = 0;
   out_3498573013962149813[408] = 0;
   out_3498573013962149813[409] = 0;
   out_3498573013962149813[410] = 0;
   out_3498573013962149813[411] = 0;
   out_3498573013962149813[412] = 0;
   out_3498573013962149813[413] = 0;
   out_3498573013962149813[414] = 0;
   out_3498573013962149813[415] = 0;
   out_3498573013962149813[416] = 0;
   out_3498573013962149813[417] = 0;
   out_3498573013962149813[418] = 1;
   out_3498573013962149813[419] = 0;
   out_3498573013962149813[420] = 0;
   out_3498573013962149813[421] = 0;
   out_3498573013962149813[422] = 0;
   out_3498573013962149813[423] = 0;
   out_3498573013962149813[424] = 0;
   out_3498573013962149813[425] = 0;
   out_3498573013962149813[426] = 0;
   out_3498573013962149813[427] = 0;
   out_3498573013962149813[428] = 0;
   out_3498573013962149813[429] = 0;
   out_3498573013962149813[430] = 0;
   out_3498573013962149813[431] = 0;
   out_3498573013962149813[432] = 0;
   out_3498573013962149813[433] = 0;
   out_3498573013962149813[434] = 0;
   out_3498573013962149813[435] = 0;
   out_3498573013962149813[436] = 0;
   out_3498573013962149813[437] = 0;
   out_3498573013962149813[438] = 0;
   out_3498573013962149813[439] = 0;
   out_3498573013962149813[440] = 1;
}
void h_4(double *state, double *unused, double *out_4634326154971043539) {
   out_4634326154971043539[0] = state[10] + state[13];
   out_4634326154971043539[1] = state[11] + state[14];
   out_4634326154971043539[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5793941672046777925) {
   out_5793941672046777925[0] = 0;
   out_5793941672046777925[1] = 0;
   out_5793941672046777925[2] = 0;
   out_5793941672046777925[3] = 0;
   out_5793941672046777925[4] = 0;
   out_5793941672046777925[5] = 0;
   out_5793941672046777925[6] = 0;
   out_5793941672046777925[7] = 0;
   out_5793941672046777925[8] = 0;
   out_5793941672046777925[9] = 0;
   out_5793941672046777925[10] = 1;
   out_5793941672046777925[11] = 0;
   out_5793941672046777925[12] = 0;
   out_5793941672046777925[13] = 1;
   out_5793941672046777925[14] = 0;
   out_5793941672046777925[15] = 0;
   out_5793941672046777925[16] = 0;
   out_5793941672046777925[17] = 0;
   out_5793941672046777925[18] = 0;
   out_5793941672046777925[19] = 0;
   out_5793941672046777925[20] = 0;
   out_5793941672046777925[21] = 0;
   out_5793941672046777925[22] = 0;
   out_5793941672046777925[23] = 0;
   out_5793941672046777925[24] = 0;
   out_5793941672046777925[25] = 0;
   out_5793941672046777925[26] = 0;
   out_5793941672046777925[27] = 0;
   out_5793941672046777925[28] = 0;
   out_5793941672046777925[29] = 0;
   out_5793941672046777925[30] = 0;
   out_5793941672046777925[31] = 0;
   out_5793941672046777925[32] = 0;
   out_5793941672046777925[33] = 1;
   out_5793941672046777925[34] = 0;
   out_5793941672046777925[35] = 0;
   out_5793941672046777925[36] = 1;
   out_5793941672046777925[37] = 0;
   out_5793941672046777925[38] = 0;
   out_5793941672046777925[39] = 0;
   out_5793941672046777925[40] = 0;
   out_5793941672046777925[41] = 0;
   out_5793941672046777925[42] = 0;
   out_5793941672046777925[43] = 0;
   out_5793941672046777925[44] = 0;
   out_5793941672046777925[45] = 0;
   out_5793941672046777925[46] = 0;
   out_5793941672046777925[47] = 0;
   out_5793941672046777925[48] = 0;
   out_5793941672046777925[49] = 0;
   out_5793941672046777925[50] = 0;
   out_5793941672046777925[51] = 0;
   out_5793941672046777925[52] = 0;
   out_5793941672046777925[53] = 0;
   out_5793941672046777925[54] = 0;
   out_5793941672046777925[55] = 0;
   out_5793941672046777925[56] = 1;
   out_5793941672046777925[57] = 0;
   out_5793941672046777925[58] = 0;
   out_5793941672046777925[59] = 1;
   out_5793941672046777925[60] = 0;
   out_5793941672046777925[61] = 0;
   out_5793941672046777925[62] = 0;
   out_5793941672046777925[63] = 0;
   out_5793941672046777925[64] = 0;
   out_5793941672046777925[65] = 0;
}
void h_9(double *state, double *unused, double *out_8068319091456813771) {
   out_8068319091456813771[0] = state[10];
   out_8068319091456813771[1] = state[11];
   out_8068319091456813771[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1493277263217669545) {
   out_1493277263217669545[0] = 0;
   out_1493277263217669545[1] = 0;
   out_1493277263217669545[2] = 0;
   out_1493277263217669545[3] = 0;
   out_1493277263217669545[4] = 0;
   out_1493277263217669545[5] = 0;
   out_1493277263217669545[6] = 0;
   out_1493277263217669545[7] = 0;
   out_1493277263217669545[8] = 0;
   out_1493277263217669545[9] = 0;
   out_1493277263217669545[10] = 1;
   out_1493277263217669545[11] = 0;
   out_1493277263217669545[12] = 0;
   out_1493277263217669545[13] = 0;
   out_1493277263217669545[14] = 0;
   out_1493277263217669545[15] = 0;
   out_1493277263217669545[16] = 0;
   out_1493277263217669545[17] = 0;
   out_1493277263217669545[18] = 0;
   out_1493277263217669545[19] = 0;
   out_1493277263217669545[20] = 0;
   out_1493277263217669545[21] = 0;
   out_1493277263217669545[22] = 0;
   out_1493277263217669545[23] = 0;
   out_1493277263217669545[24] = 0;
   out_1493277263217669545[25] = 0;
   out_1493277263217669545[26] = 0;
   out_1493277263217669545[27] = 0;
   out_1493277263217669545[28] = 0;
   out_1493277263217669545[29] = 0;
   out_1493277263217669545[30] = 0;
   out_1493277263217669545[31] = 0;
   out_1493277263217669545[32] = 0;
   out_1493277263217669545[33] = 1;
   out_1493277263217669545[34] = 0;
   out_1493277263217669545[35] = 0;
   out_1493277263217669545[36] = 0;
   out_1493277263217669545[37] = 0;
   out_1493277263217669545[38] = 0;
   out_1493277263217669545[39] = 0;
   out_1493277263217669545[40] = 0;
   out_1493277263217669545[41] = 0;
   out_1493277263217669545[42] = 0;
   out_1493277263217669545[43] = 0;
   out_1493277263217669545[44] = 0;
   out_1493277263217669545[45] = 0;
   out_1493277263217669545[46] = 0;
   out_1493277263217669545[47] = 0;
   out_1493277263217669545[48] = 0;
   out_1493277263217669545[49] = 0;
   out_1493277263217669545[50] = 0;
   out_1493277263217669545[51] = 0;
   out_1493277263217669545[52] = 0;
   out_1493277263217669545[53] = 0;
   out_1493277263217669545[54] = 0;
   out_1493277263217669545[55] = 0;
   out_1493277263217669545[56] = 1;
   out_1493277263217669545[57] = 0;
   out_1493277263217669545[58] = 0;
   out_1493277263217669545[59] = 0;
   out_1493277263217669545[60] = 0;
   out_1493277263217669545[61] = 0;
   out_1493277263217669545[62] = 0;
   out_1493277263217669545[63] = 0;
   out_1493277263217669545[64] = 0;
   out_1493277263217669545[65] = 0;
}
void h_10(double *state, double *unused, double *out_1291373057745151105) {
   out_1291373057745151105[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_1291373057745151105[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_1291373057745151105[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_4732690437197290223) {
   out_4732690437197290223[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4732690437197290223[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4732690437197290223[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_4732690437197290223[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4732690437197290223[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4732690437197290223[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4732690437197290223[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4732690437197290223[7] = 0;
   out_4732690437197290223[8] = 0;
   out_4732690437197290223[9] = 0;
   out_4732690437197290223[10] = 0;
   out_4732690437197290223[11] = 0;
   out_4732690437197290223[12] = 0;
   out_4732690437197290223[13] = 0;
   out_4732690437197290223[14] = 0;
   out_4732690437197290223[15] = 0;
   out_4732690437197290223[16] = 1;
   out_4732690437197290223[17] = 0;
   out_4732690437197290223[18] = 0;
   out_4732690437197290223[19] = 1;
   out_4732690437197290223[20] = 0;
   out_4732690437197290223[21] = 0;
   out_4732690437197290223[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_4732690437197290223[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4732690437197290223[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_4732690437197290223[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4732690437197290223[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4732690437197290223[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4732690437197290223[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4732690437197290223[29] = 0;
   out_4732690437197290223[30] = 0;
   out_4732690437197290223[31] = 0;
   out_4732690437197290223[32] = 0;
   out_4732690437197290223[33] = 0;
   out_4732690437197290223[34] = 0;
   out_4732690437197290223[35] = 0;
   out_4732690437197290223[36] = 0;
   out_4732690437197290223[37] = 0;
   out_4732690437197290223[38] = 0;
   out_4732690437197290223[39] = 1;
   out_4732690437197290223[40] = 0;
   out_4732690437197290223[41] = 0;
   out_4732690437197290223[42] = 1;
   out_4732690437197290223[43] = 0;
   out_4732690437197290223[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_4732690437197290223[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_4732690437197290223[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4732690437197290223[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_4732690437197290223[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_4732690437197290223[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_4732690437197290223[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_4732690437197290223[51] = 0;
   out_4732690437197290223[52] = 0;
   out_4732690437197290223[53] = 0;
   out_4732690437197290223[54] = 0;
   out_4732690437197290223[55] = 0;
   out_4732690437197290223[56] = 0;
   out_4732690437197290223[57] = 0;
   out_4732690437197290223[58] = 0;
   out_4732690437197290223[59] = 0;
   out_4732690437197290223[60] = 0;
   out_4732690437197290223[61] = 0;
   out_4732690437197290223[62] = 1;
   out_4732690437197290223[63] = 0;
   out_4732690437197290223[64] = 0;
   out_4732690437197290223[65] = 1;
}
void h_12(double *state, double *unused, double *out_3273295598417010056) {
   out_3273295598417010056[0] = state[0];
   out_3273295598417010056[1] = state[1];
   out_3273295598417010056[2] = state[2];
}
void H_12(double *state, double *unused, double *out_774485264014816130) {
   out_774485264014816130[0] = 1;
   out_774485264014816130[1] = 0;
   out_774485264014816130[2] = 0;
   out_774485264014816130[3] = 0;
   out_774485264014816130[4] = 0;
   out_774485264014816130[5] = 0;
   out_774485264014816130[6] = 0;
   out_774485264014816130[7] = 0;
   out_774485264014816130[8] = 0;
   out_774485264014816130[9] = 0;
   out_774485264014816130[10] = 0;
   out_774485264014816130[11] = 0;
   out_774485264014816130[12] = 0;
   out_774485264014816130[13] = 0;
   out_774485264014816130[14] = 0;
   out_774485264014816130[15] = 0;
   out_774485264014816130[16] = 0;
   out_774485264014816130[17] = 0;
   out_774485264014816130[18] = 0;
   out_774485264014816130[19] = 0;
   out_774485264014816130[20] = 0;
   out_774485264014816130[21] = 0;
   out_774485264014816130[22] = 0;
   out_774485264014816130[23] = 1;
   out_774485264014816130[24] = 0;
   out_774485264014816130[25] = 0;
   out_774485264014816130[26] = 0;
   out_774485264014816130[27] = 0;
   out_774485264014816130[28] = 0;
   out_774485264014816130[29] = 0;
   out_774485264014816130[30] = 0;
   out_774485264014816130[31] = 0;
   out_774485264014816130[32] = 0;
   out_774485264014816130[33] = 0;
   out_774485264014816130[34] = 0;
   out_774485264014816130[35] = 0;
   out_774485264014816130[36] = 0;
   out_774485264014816130[37] = 0;
   out_774485264014816130[38] = 0;
   out_774485264014816130[39] = 0;
   out_774485264014816130[40] = 0;
   out_774485264014816130[41] = 0;
   out_774485264014816130[42] = 0;
   out_774485264014816130[43] = 0;
   out_774485264014816130[44] = 0;
   out_774485264014816130[45] = 0;
   out_774485264014816130[46] = 1;
   out_774485264014816130[47] = 0;
   out_774485264014816130[48] = 0;
   out_774485264014816130[49] = 0;
   out_774485264014816130[50] = 0;
   out_774485264014816130[51] = 0;
   out_774485264014816130[52] = 0;
   out_774485264014816130[53] = 0;
   out_774485264014816130[54] = 0;
   out_774485264014816130[55] = 0;
   out_774485264014816130[56] = 0;
   out_774485264014816130[57] = 0;
   out_774485264014816130[58] = 0;
   out_774485264014816130[59] = 0;
   out_774485264014816130[60] = 0;
   out_774485264014816130[61] = 0;
   out_774485264014816130[62] = 0;
   out_774485264014816130[63] = 0;
   out_774485264014816130[64] = 0;
   out_774485264014816130[65] = 0;
}
void h_35(double *state, double *unused, double *out_1828577783195837618) {
   out_1828577783195837618[0] = state[7];
   out_1828577783195837618[1] = state[8];
   out_1828577783195837618[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2427279614674170549) {
   out_2427279614674170549[0] = 0;
   out_2427279614674170549[1] = 0;
   out_2427279614674170549[2] = 0;
   out_2427279614674170549[3] = 0;
   out_2427279614674170549[4] = 0;
   out_2427279614674170549[5] = 0;
   out_2427279614674170549[6] = 0;
   out_2427279614674170549[7] = 1;
   out_2427279614674170549[8] = 0;
   out_2427279614674170549[9] = 0;
   out_2427279614674170549[10] = 0;
   out_2427279614674170549[11] = 0;
   out_2427279614674170549[12] = 0;
   out_2427279614674170549[13] = 0;
   out_2427279614674170549[14] = 0;
   out_2427279614674170549[15] = 0;
   out_2427279614674170549[16] = 0;
   out_2427279614674170549[17] = 0;
   out_2427279614674170549[18] = 0;
   out_2427279614674170549[19] = 0;
   out_2427279614674170549[20] = 0;
   out_2427279614674170549[21] = 0;
   out_2427279614674170549[22] = 0;
   out_2427279614674170549[23] = 0;
   out_2427279614674170549[24] = 0;
   out_2427279614674170549[25] = 0;
   out_2427279614674170549[26] = 0;
   out_2427279614674170549[27] = 0;
   out_2427279614674170549[28] = 0;
   out_2427279614674170549[29] = 0;
   out_2427279614674170549[30] = 1;
   out_2427279614674170549[31] = 0;
   out_2427279614674170549[32] = 0;
   out_2427279614674170549[33] = 0;
   out_2427279614674170549[34] = 0;
   out_2427279614674170549[35] = 0;
   out_2427279614674170549[36] = 0;
   out_2427279614674170549[37] = 0;
   out_2427279614674170549[38] = 0;
   out_2427279614674170549[39] = 0;
   out_2427279614674170549[40] = 0;
   out_2427279614674170549[41] = 0;
   out_2427279614674170549[42] = 0;
   out_2427279614674170549[43] = 0;
   out_2427279614674170549[44] = 0;
   out_2427279614674170549[45] = 0;
   out_2427279614674170549[46] = 0;
   out_2427279614674170549[47] = 0;
   out_2427279614674170549[48] = 0;
   out_2427279614674170549[49] = 0;
   out_2427279614674170549[50] = 0;
   out_2427279614674170549[51] = 0;
   out_2427279614674170549[52] = 0;
   out_2427279614674170549[53] = 1;
   out_2427279614674170549[54] = 0;
   out_2427279614674170549[55] = 0;
   out_2427279614674170549[56] = 0;
   out_2427279614674170549[57] = 0;
   out_2427279614674170549[58] = 0;
   out_2427279614674170549[59] = 0;
   out_2427279614674170549[60] = 0;
   out_2427279614674170549[61] = 0;
   out_2427279614674170549[62] = 0;
   out_2427279614674170549[63] = 0;
   out_2427279614674170549[64] = 0;
   out_2427279614674170549[65] = 0;
}
void h_32(double *state, double *unused, double *out_2102612338032722235) {
   out_2102612338032722235[0] = state[3];
   out_2102612338032722235[1] = state[4];
   out_2102612338032722235[2] = state[5];
   out_2102612338032722235[3] = state[6];
}
void H_32(double *state, double *unused, double *out_486441277341161748) {
   out_486441277341161748[0] = 0;
   out_486441277341161748[1] = 0;
   out_486441277341161748[2] = 0;
   out_486441277341161748[3] = 1;
   out_486441277341161748[4] = 0;
   out_486441277341161748[5] = 0;
   out_486441277341161748[6] = 0;
   out_486441277341161748[7] = 0;
   out_486441277341161748[8] = 0;
   out_486441277341161748[9] = 0;
   out_486441277341161748[10] = 0;
   out_486441277341161748[11] = 0;
   out_486441277341161748[12] = 0;
   out_486441277341161748[13] = 0;
   out_486441277341161748[14] = 0;
   out_486441277341161748[15] = 0;
   out_486441277341161748[16] = 0;
   out_486441277341161748[17] = 0;
   out_486441277341161748[18] = 0;
   out_486441277341161748[19] = 0;
   out_486441277341161748[20] = 0;
   out_486441277341161748[21] = 0;
   out_486441277341161748[22] = 0;
   out_486441277341161748[23] = 0;
   out_486441277341161748[24] = 0;
   out_486441277341161748[25] = 0;
   out_486441277341161748[26] = 1;
   out_486441277341161748[27] = 0;
   out_486441277341161748[28] = 0;
   out_486441277341161748[29] = 0;
   out_486441277341161748[30] = 0;
   out_486441277341161748[31] = 0;
   out_486441277341161748[32] = 0;
   out_486441277341161748[33] = 0;
   out_486441277341161748[34] = 0;
   out_486441277341161748[35] = 0;
   out_486441277341161748[36] = 0;
   out_486441277341161748[37] = 0;
   out_486441277341161748[38] = 0;
   out_486441277341161748[39] = 0;
   out_486441277341161748[40] = 0;
   out_486441277341161748[41] = 0;
   out_486441277341161748[42] = 0;
   out_486441277341161748[43] = 0;
   out_486441277341161748[44] = 0;
   out_486441277341161748[45] = 0;
   out_486441277341161748[46] = 0;
   out_486441277341161748[47] = 0;
   out_486441277341161748[48] = 0;
   out_486441277341161748[49] = 1;
   out_486441277341161748[50] = 0;
   out_486441277341161748[51] = 0;
   out_486441277341161748[52] = 0;
   out_486441277341161748[53] = 0;
   out_486441277341161748[54] = 0;
   out_486441277341161748[55] = 0;
   out_486441277341161748[56] = 0;
   out_486441277341161748[57] = 0;
   out_486441277341161748[58] = 0;
   out_486441277341161748[59] = 0;
   out_486441277341161748[60] = 0;
   out_486441277341161748[61] = 0;
   out_486441277341161748[62] = 0;
   out_486441277341161748[63] = 0;
   out_486441277341161748[64] = 0;
   out_486441277341161748[65] = 0;
   out_486441277341161748[66] = 0;
   out_486441277341161748[67] = 0;
   out_486441277341161748[68] = 0;
   out_486441277341161748[69] = 0;
   out_486441277341161748[70] = 0;
   out_486441277341161748[71] = 0;
   out_486441277341161748[72] = 1;
   out_486441277341161748[73] = 0;
   out_486441277341161748[74] = 0;
   out_486441277341161748[75] = 0;
   out_486441277341161748[76] = 0;
   out_486441277341161748[77] = 0;
   out_486441277341161748[78] = 0;
   out_486441277341161748[79] = 0;
   out_486441277341161748[80] = 0;
   out_486441277341161748[81] = 0;
   out_486441277341161748[82] = 0;
   out_486441277341161748[83] = 0;
   out_486441277341161748[84] = 0;
   out_486441277341161748[85] = 0;
   out_486441277341161748[86] = 0;
   out_486441277341161748[87] = 0;
}
void h_13(double *state, double *unused, double *out_1980538623475985242) {
   out_1980538623475985242[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1980538623475985242[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1980538623475985242[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6957422548229666119) {
   out_6957422548229666119[0] = 0;
   out_6957422548229666119[1] = 0;
   out_6957422548229666119[2] = 0;
   out_6957422548229666119[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6957422548229666119[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6957422548229666119[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6957422548229666119[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6957422548229666119[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6957422548229666119[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6957422548229666119[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6957422548229666119[10] = 0;
   out_6957422548229666119[11] = 0;
   out_6957422548229666119[12] = 0;
   out_6957422548229666119[13] = 0;
   out_6957422548229666119[14] = 0;
   out_6957422548229666119[15] = 0;
   out_6957422548229666119[16] = 0;
   out_6957422548229666119[17] = 0;
   out_6957422548229666119[18] = 0;
   out_6957422548229666119[19] = 0;
   out_6957422548229666119[20] = 0;
   out_6957422548229666119[21] = 0;
   out_6957422548229666119[22] = 0;
   out_6957422548229666119[23] = 0;
   out_6957422548229666119[24] = 0;
   out_6957422548229666119[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6957422548229666119[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6957422548229666119[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6957422548229666119[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6957422548229666119[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6957422548229666119[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6957422548229666119[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6957422548229666119[32] = 0;
   out_6957422548229666119[33] = 0;
   out_6957422548229666119[34] = 0;
   out_6957422548229666119[35] = 0;
   out_6957422548229666119[36] = 0;
   out_6957422548229666119[37] = 0;
   out_6957422548229666119[38] = 0;
   out_6957422548229666119[39] = 0;
   out_6957422548229666119[40] = 0;
   out_6957422548229666119[41] = 0;
   out_6957422548229666119[42] = 0;
   out_6957422548229666119[43] = 0;
   out_6957422548229666119[44] = 0;
   out_6957422548229666119[45] = 0;
   out_6957422548229666119[46] = 0;
   out_6957422548229666119[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6957422548229666119[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6957422548229666119[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6957422548229666119[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6957422548229666119[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6957422548229666119[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6957422548229666119[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6957422548229666119[54] = 0;
   out_6957422548229666119[55] = 0;
   out_6957422548229666119[56] = 0;
   out_6957422548229666119[57] = 0;
   out_6957422548229666119[58] = 0;
   out_6957422548229666119[59] = 0;
   out_6957422548229666119[60] = 0;
   out_6957422548229666119[61] = 0;
   out_6957422548229666119[62] = 0;
   out_6957422548229666119[63] = 0;
   out_6957422548229666119[64] = 0;
   out_6957422548229666119[65] = 0;
}
void h_14(double *state, double *unused, double *out_8068319091456813771) {
   out_8068319091456813771[0] = state[10];
   out_8068319091456813771[1] = state[11];
   out_8068319091456813771[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1493277263217669545) {
   out_1493277263217669545[0] = 0;
   out_1493277263217669545[1] = 0;
   out_1493277263217669545[2] = 0;
   out_1493277263217669545[3] = 0;
   out_1493277263217669545[4] = 0;
   out_1493277263217669545[5] = 0;
   out_1493277263217669545[6] = 0;
   out_1493277263217669545[7] = 0;
   out_1493277263217669545[8] = 0;
   out_1493277263217669545[9] = 0;
   out_1493277263217669545[10] = 1;
   out_1493277263217669545[11] = 0;
   out_1493277263217669545[12] = 0;
   out_1493277263217669545[13] = 0;
   out_1493277263217669545[14] = 0;
   out_1493277263217669545[15] = 0;
   out_1493277263217669545[16] = 0;
   out_1493277263217669545[17] = 0;
   out_1493277263217669545[18] = 0;
   out_1493277263217669545[19] = 0;
   out_1493277263217669545[20] = 0;
   out_1493277263217669545[21] = 0;
   out_1493277263217669545[22] = 0;
   out_1493277263217669545[23] = 0;
   out_1493277263217669545[24] = 0;
   out_1493277263217669545[25] = 0;
   out_1493277263217669545[26] = 0;
   out_1493277263217669545[27] = 0;
   out_1493277263217669545[28] = 0;
   out_1493277263217669545[29] = 0;
   out_1493277263217669545[30] = 0;
   out_1493277263217669545[31] = 0;
   out_1493277263217669545[32] = 0;
   out_1493277263217669545[33] = 1;
   out_1493277263217669545[34] = 0;
   out_1493277263217669545[35] = 0;
   out_1493277263217669545[36] = 0;
   out_1493277263217669545[37] = 0;
   out_1493277263217669545[38] = 0;
   out_1493277263217669545[39] = 0;
   out_1493277263217669545[40] = 0;
   out_1493277263217669545[41] = 0;
   out_1493277263217669545[42] = 0;
   out_1493277263217669545[43] = 0;
   out_1493277263217669545[44] = 0;
   out_1493277263217669545[45] = 0;
   out_1493277263217669545[46] = 0;
   out_1493277263217669545[47] = 0;
   out_1493277263217669545[48] = 0;
   out_1493277263217669545[49] = 0;
   out_1493277263217669545[50] = 0;
   out_1493277263217669545[51] = 0;
   out_1493277263217669545[52] = 0;
   out_1493277263217669545[53] = 0;
   out_1493277263217669545[54] = 0;
   out_1493277263217669545[55] = 0;
   out_1493277263217669545[56] = 1;
   out_1493277263217669545[57] = 0;
   out_1493277263217669545[58] = 0;
   out_1493277263217669545[59] = 0;
   out_1493277263217669545[60] = 0;
   out_1493277263217669545[61] = 0;
   out_1493277263217669545[62] = 0;
   out_1493277263217669545[63] = 0;
   out_1493277263217669545[64] = 0;
   out_1493277263217669545[65] = 0;
}
void h_33(double *state, double *unused, double *out_1118410037494727429) {
   out_1118410037494727429[0] = state[16];
   out_1118410037494727429[1] = state[17];
   out_1118410037494727429[2] = state[18];
}
void H_33(double *state, double *unused, double *out_723277389964687055) {
   out_723277389964687055[0] = 0;
   out_723277389964687055[1] = 0;
   out_723277389964687055[2] = 0;
   out_723277389964687055[3] = 0;
   out_723277389964687055[4] = 0;
   out_723277389964687055[5] = 0;
   out_723277389964687055[6] = 0;
   out_723277389964687055[7] = 0;
   out_723277389964687055[8] = 0;
   out_723277389964687055[9] = 0;
   out_723277389964687055[10] = 0;
   out_723277389964687055[11] = 0;
   out_723277389964687055[12] = 0;
   out_723277389964687055[13] = 0;
   out_723277389964687055[14] = 0;
   out_723277389964687055[15] = 0;
   out_723277389964687055[16] = 1;
   out_723277389964687055[17] = 0;
   out_723277389964687055[18] = 0;
   out_723277389964687055[19] = 0;
   out_723277389964687055[20] = 0;
   out_723277389964687055[21] = 0;
   out_723277389964687055[22] = 0;
   out_723277389964687055[23] = 0;
   out_723277389964687055[24] = 0;
   out_723277389964687055[25] = 0;
   out_723277389964687055[26] = 0;
   out_723277389964687055[27] = 0;
   out_723277389964687055[28] = 0;
   out_723277389964687055[29] = 0;
   out_723277389964687055[30] = 0;
   out_723277389964687055[31] = 0;
   out_723277389964687055[32] = 0;
   out_723277389964687055[33] = 0;
   out_723277389964687055[34] = 0;
   out_723277389964687055[35] = 0;
   out_723277389964687055[36] = 0;
   out_723277389964687055[37] = 0;
   out_723277389964687055[38] = 0;
   out_723277389964687055[39] = 1;
   out_723277389964687055[40] = 0;
   out_723277389964687055[41] = 0;
   out_723277389964687055[42] = 0;
   out_723277389964687055[43] = 0;
   out_723277389964687055[44] = 0;
   out_723277389964687055[45] = 0;
   out_723277389964687055[46] = 0;
   out_723277389964687055[47] = 0;
   out_723277389964687055[48] = 0;
   out_723277389964687055[49] = 0;
   out_723277389964687055[50] = 0;
   out_723277389964687055[51] = 0;
   out_723277389964687055[52] = 0;
   out_723277389964687055[53] = 0;
   out_723277389964687055[54] = 0;
   out_723277389964687055[55] = 0;
   out_723277389964687055[56] = 0;
   out_723277389964687055[57] = 0;
   out_723277389964687055[58] = 0;
   out_723277389964687055[59] = 0;
   out_723277389964687055[60] = 0;
   out_723277389964687055[61] = 0;
   out_723277389964687055[62] = 1;
   out_723277389964687055[63] = 0;
   out_723277389964687055[64] = 0;
   out_723277389964687055[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_5237643649060389022) {
  H(in_vec, out_5237643649060389022);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_967976388207055188) {
  err_fun(nom_x, delta_x, out_967976388207055188);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_175890247565689822) {
  inv_err_fun(nom_x, true_x, out_175890247565689822);
}
void live_H_mod_fun(double *state, double *out_7389402166843712978) {
  H_mod_fun(state, out_7389402166843712978);
}
void live_f_fun(double *state, double dt, double *out_2578146559919125658) {
  f_fun(state,  dt, out_2578146559919125658);
}
void live_F_fun(double *state, double dt, double *out_3498573013962149813) {
  F_fun(state,  dt, out_3498573013962149813);
}
void live_h_4(double *state, double *unused, double *out_4634326154971043539) {
  h_4(state, unused, out_4634326154971043539);
}
void live_H_4(double *state, double *unused, double *out_5793941672046777925) {
  H_4(state, unused, out_5793941672046777925);
}
void live_h_9(double *state, double *unused, double *out_8068319091456813771) {
  h_9(state, unused, out_8068319091456813771);
}
void live_H_9(double *state, double *unused, double *out_1493277263217669545) {
  H_9(state, unused, out_1493277263217669545);
}
void live_h_10(double *state, double *unused, double *out_1291373057745151105) {
  h_10(state, unused, out_1291373057745151105);
}
void live_H_10(double *state, double *unused, double *out_4732690437197290223) {
  H_10(state, unused, out_4732690437197290223);
}
void live_h_12(double *state, double *unused, double *out_3273295598417010056) {
  h_12(state, unused, out_3273295598417010056);
}
void live_H_12(double *state, double *unused, double *out_774485264014816130) {
  H_12(state, unused, out_774485264014816130);
}
void live_h_35(double *state, double *unused, double *out_1828577783195837618) {
  h_35(state, unused, out_1828577783195837618);
}
void live_H_35(double *state, double *unused, double *out_2427279614674170549) {
  H_35(state, unused, out_2427279614674170549);
}
void live_h_32(double *state, double *unused, double *out_2102612338032722235) {
  h_32(state, unused, out_2102612338032722235);
}
void live_H_32(double *state, double *unused, double *out_486441277341161748) {
  H_32(state, unused, out_486441277341161748);
}
void live_h_13(double *state, double *unused, double *out_1980538623475985242) {
  h_13(state, unused, out_1980538623475985242);
}
void live_H_13(double *state, double *unused, double *out_6957422548229666119) {
  H_13(state, unused, out_6957422548229666119);
}
void live_h_14(double *state, double *unused, double *out_8068319091456813771) {
  h_14(state, unused, out_8068319091456813771);
}
void live_H_14(double *state, double *unused, double *out_1493277263217669545) {
  H_14(state, unused, out_1493277263217669545);
}
void live_h_33(double *state, double *unused, double *out_1118410037494727429) {
  h_33(state, unused, out_1118410037494727429);
}
void live_H_33(double *state, double *unused, double *out_723277389964687055) {
  H_33(state, unused, out_723277389964687055);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
